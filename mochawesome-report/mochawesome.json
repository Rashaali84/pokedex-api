{
  "stats": {
    "suites": 8,
    "tests": 45,
    "passes": 45,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-25T21:33:42.715Z",
    "end": "2020-05-25T21:33:42.768Z",
    "duration": 53,
    "testsRegistered": 45,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "caf821f9-ca96-4039-819a-4e5efec13828",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "55dceddd-f3c9-46fb-accc-08c881e2be5a",
          "title": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon: ",
          "fullFile": "e:\\HYF\\06-WebApps\\week-4\\Exercises\\pokedex-api\\logic\\evolutions-of\\spec.js",
          "file": "\\logic\\evolutions-of\\spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Squirtle",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Squirtle",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Squirtle');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "e2ad1d0e-1ce6-445a-a55c-6869d89da07a",
              "parentUUID": "55dceddd-f3c9-46fb-accc-08c881e2be5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, Wartortle",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Wartortle",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Wartortle');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "61992975-1d9b-4ecc-af03-f9bf5edd4140",
              "parentUUID": "55dceddd-f3c9-46fb-accc-08c881e2be5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, Blastoise",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 1, Blastoise",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample1, 'Blastoise');\nconst expected = [\n  { \"num\": \"007\", \"name\": \"Squirtle\" },\n  { \"num\": \"008\", \"name\": \"Wartortle\" },\n  { \"num\": \"009\", \"name\": \"Blastoise\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "569cc896-f6dd-42e1-9129-934418b46f33",
              "parentUUID": "55dceddd-f3c9-46fb-accc-08c881e2be5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, DoesNotExist",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 3, DoesNotExist",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample3, 'DoesNotExist');\nconst expected = null;\nassert.strictEqual(actual, expected);",
              "err": {},
              "uuid": "88adb3bc-1fed-4ed1-a607-dd9eaa6fa31a",
              "parentUUID": "55dceddd-f3c9-46fb-accc-08c881e2be5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Mew",
              "fullTitle": "evolutionOf(pokeData, name) : returns all evolutions of a pokemon:  data sample 5, Mew",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = evolutionOf(dataSample5, 'Mew');\nconst expected = [\n  { \"name\": \"Mew\", \"num\": \"151\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "ba8694d3-312d-495a-abb0-598304f64044",
              "parentUUID": "55dceddd-f3c9-46fb-accc-08c881e2be5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2ad1d0e-1ce6-445a-a55c-6869d89da07a",
            "61992975-1d9b-4ecc-af03-f9bf5edd4140",
            "569cc896-f6dd-42e1-9129-934418b46f33",
            "88adb3bc-1fed-4ed1-a607-dd9eaa6fa31a",
            "ba8694d3-312d-495a-abb0-598304f64044"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "85b0b969-0e6f-4000-900e-852a9fd043a0",
          "title": "findById(pokeData, id) : returns the pokemon object with the given id",
          "fullFile": "e:\\HYF\\06-WebApps\\week-4\\Exercises\\pokedex-api\\logic\\find-by\\id\\spec.js",
          "file": "\\logic\\find-by\\id\\spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, 13",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 1, 13",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample1, 13);\nconst expected = {\n  \"id\": 13,\n  \"num\": \"013\",\n  \"name\": \"Weedle\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/013.png\",\n  \"type\": [\n    \"Bug\",\n    \"Poison\"\n  ],\n  \"height\": \"0.30 m\",\n  \"weight\": \"3.2 kg\",\n  \"candy\": \"Weedle Candy\",\n  \"candy_count\": 12,\n  \"egg\": \"2 km\",\n  \"spawn_chance\": 7.12,\n  \"avg_spawns\": 712,\n  \"spawn_time\": \"02:21\",\n  \"multipliers\": [\n    1.01,\n    1.09\n  ],\n  \"weaknesses\": [\n    \"Fire\",\n    \"Flying\",\n    \"Psychic\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    { \"num\": \"014\", \"name\": \"Kakuna\" },\n    { \"num\": \"015\", \"name\": \"Beedrill\" }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "40c60346-7e88-494f-95b2-aafa9602473c",
              "parentUUID": "85b0b969-0e6f-4000-900e-852a9fd043a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, 16",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 1, 16",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample1, 16);\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "302bd914-814c-406a-907e-050dfc472e68",
              "parentUUID": "85b0b969-0e6f-4000-900e-852a9fd043a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, 46",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 2, 46",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample2, 46);\nconst expected = {\n  \"id\": 46,\n  \"num\": \"046\",\n  \"name\": \"Paras\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/046.png\",\n  \"type\": [\n    \"Bug\",\n    \"Grass\"\n  ],\n  \"height\": \"0.30 m\",\n  \"weight\": \"5.4 kg\",\n  \"candy\": \"Paras Candy\",\n  \"candy_count\": 50,\n  \"egg\": \"5 km\",\n  \"spawn_chance\": 2.36,\n  \"avg_spawns\": 236,\n  \"spawn_time\": \"01:42\",\n  \"multipliers\": [\n    2.02\n  ],\n  \"weaknesses\": [\n    \"Fire\",\n    \"Ice\",\n    \"Poison\",\n    \"Flying\",\n    \"Bug\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    {\n      \"num\": \"047\",\n      \"name\": \"Parasect\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "2f876498-89f4-468b-8784-92a15617cb97",
              "parentUUID": "85b0b969-0e6f-4000-900e-852a9fd043a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, 42",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 2, 42",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample2, 42);\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "cdc0f9d9-7d7e-4d82-8fd0-bdb4842f428a",
              "parentUUID": "85b0b969-0e6f-4000-900e-852a9fd043a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, 84",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 3, 84",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample3, 84);\nconst expected = {\n  \"id\": 84,\n  \"num\": \"084\",\n  \"name\": \"Doduo\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/084.png\",\n  \"type\": [\n    \"Normal\",\n    \"Flying\"\n  ],\n  \"height\": \"1.40 m\",\n  \"weight\": \"39.2 kg\",\n  \"candy\": \"Doduo Candy\",\n  \"candy_count\": 50,\n  \"egg\": \"5 km\",\n  \"spawn_chance\": 0.52,\n  \"avg_spawns\": 52,\n  \"spawn_time\": \"05:10\",\n  \"multipliers\": [\n    2.19,\n    2.24\n  ],\n  \"weaknesses\": [\n    \"Electric\",\n    \"Rock\"\n  ],\n  \"next_evolution\": [\n    {\n      \"num\": \"085\",\n      \"name\": \"Dodrio\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "59ce7a64-07c4-4518-84fd-db3c198e71e8",
              "parentUUID": "85b0b969-0e6f-4000-900e-852a9fd043a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, 85",
              "fullTitle": "findById(pokeData, id) : returns the pokemon object with the given id data sample 3, 85",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findById(dataSample3, 85);\nconst expected = {\n  \"id\": 85,\n  \"num\": \"085\",\n  \"name\": \"Dodrio\",\n  \"img\": \"http://www.serebii.net/pokemongo/pokemon/085.png\",\n  \"type\": [\n    \"Normal\",\n    \"Flying\"\n  ],\n  \"height\": \"1.80 m\",\n  \"weight\": \"85.2 kg\",\n  \"candy\": \"Doduo Candy\",\n  \"egg\": \"Not in Eggs\",\n  \"spawn_chance\": 0.22,\n  \"avg_spawns\": 22,\n  \"spawn_time\": \"02:12\",\n  \"multipliers\": null,\n  \"weaknesses\": [\n    \"Electric\",\n    \"Rock\"\n  ],\n  \"prev_evolution\": [\n    {\n      \"num\": \"084\",\n      \"name\": \"Doduo\"\n    }\n  ]\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "5682ed37-e125-4dbf-95dd-752aec80a9a1",
              "parentUUID": "85b0b969-0e6f-4000-900e-852a9fd043a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40c60346-7e88-494f-95b2-aafa9602473c",
            "302bd914-814c-406a-907e-050dfc472e68",
            "2f876498-89f4-468b-8784-92a15617cb97",
            "cdc0f9d9-7d7e-4d82-8fd0-bdb4842f428a",
            "59ce7a64-07c4-4518-84fd-db3c198e71e8",
            "5682ed37-e125-4dbf-95dd-752aec80a9a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb1e0ec8-4a04-4348-9bec-9cf5dc23abad",
          "title": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair",
          "fullFile": "e:\\HYF\\06-WebApps\\week-4\\Exercises\\pokedex-api\\logic\\find-by\\key-value\\spec.js",
          "file": "\\logic\\find-by\\key-value\\spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, name, Weedle",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 1, name, Weedle",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample1, 'name', 'Weedle');\nconst expected = [\n  { \"num\": \"013\", \"name\": \"Weedle\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "5b4ce1a2-05ef-4c73-aaa6-eecdee996a76",
              "parentUUID": "fb1e0ec8-4a04-4348-9bec-9cf5dc23abad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 1, id, 12",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 1, id, 12",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample1, 'id', \"12\");\nconst expected = [\n  { \"num\": \"012\", \"name\": \"Butterfree\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "e1a0289d-e587-4079-aaed-200bbf290783",
              "parentUUID": "fb1e0ec8-4a04-4348-9bec-9cf5dc23abad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, doesNotExist, hi!",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 2, doesNotExist, hi!",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample2, 'doesNotExist', 'hi!');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "6db4d427-23a7-49b6-a22b-eacdc3105434",
              "parentUUID": "fb1e0ec8-4a04-4348-9bec-9cf5dc23abad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, name, Mew",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 2, name, Mew",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample2, 'name', 'Mew');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "c68cafc4-3107-41b7-8072-72bb04f43eb5",
              "parentUUID": "fb1e0ec8-4a04-4348-9bec-9cf5dc23abad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, egg, Not in Eggs",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 3, egg, Not in Eggs",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample3, 'egg', 'Not in Eggs');\nconst expected = [\n  { \"num\": \"085\", \"name\": \"Dodrio\" },\n  { \"num\": \"087\", \"name\": \"Dewgong\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "037a1da3-b39c-4e04-a879-7ab41f5331cf",
              "parentUUID": "fb1e0ec8-4a04-4348-9bec-9cf5dc23abad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, egg, 5 km",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 3, egg, 5 km",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample3, 'egg', '5 km');\nconst expected = [\n  { \"num\": \"083\", \"name\": \"Farfetch'd\" },\n  { \"num\": \"084\", \"name\": \"Doduo\" },\n  { \"num\": \"086\", \"name\": \"Seel\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "56fc82c7-9e43-4ada-922f-7d3394412066",
              "parentUUID": "fb1e0ec8-4a04-4348-9bec-9cf5dc23abad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, spawn_time, N/A",
              "fullTitle": "findByKeyValue(pokeData, key, value) : returns the number and name of all pokemon with the given key/value pair data sample 4, spawn_time, N/A",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByKeyValue(dataSample4, 'spawn_time', 'N/A');\nconst expected = [\n  { \"num\": \"132\", \"name\": \"Ditto\" }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "dd34019c-344a-4198-afb4-74c75407a181",
              "parentUUID": "fb1e0ec8-4a04-4348-9bec-9cf5dc23abad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b4ce1a2-05ef-4c73-aaa6-eecdee996a76",
            "e1a0289d-e587-4079-aaed-200bbf290783",
            "6db4d427-23a7-49b6-a22b-eacdc3105434",
            "c68cafc4-3107-41b7-8072-72bb04f43eb5",
            "037a1da3-b39c-4e04-a879-7ab41f5331cf",
            "56fc82c7-9e43-4ada-922f-7d3394412066",
            "dd34019c-344a-4198-afb4-74c75407a181"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9dabfc31-c160-4aa6-a84f-36a6dfdddfaa",
          "title": "findByType(pokeData, type) : returns the name and number of all pokemon with this type",
          "fullFile": "e:\\HYF\\06-WebApps\\week-4\\Exercises\\pokedex-api\\logic\\find-by\\type\\spec.js",
          "file": "\\logic\\find-by\\type\\spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Bug",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 1, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample1, 'Bug');\nconst expected = [\n  { name: 'Caterpie', num: '010' },\n  { name: 'Metapod', num: '011' },\n  { name: 'Butterfree', num: '012' },\n  { name: 'Weedle', num: '013' },\n  { name: 'Kakuna', num: '014' },\n  { name: 'Beedrill', num: '015' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "269c4150-072a-4fc5-9e4e-d94450adfe07",
              "parentUUID": "9dabfc31-c160-4aa6-a84f-36a6dfdddfaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 2, Bug",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample2, 'Bug');\nconst expected = [\n  { name: 'Paras', num: '046' },\n  { name: 'Parasect', num: '047' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "f3dae8ae-11fc-48fe-ba98-73652ec2f62c",
              "parentUUID": "9dabfc31-c160-4aa6-a84f-36a6dfdddfaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, Water",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 3, Water",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample3, 'Water');\nconst expected = [\n  { name: 'Seel', num: '086' },\n  { name: 'Dewgong', num: '087' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "33d3e2de-b8a3-4094-9d69-18d30f9debce",
              "parentUUID": "9dabfc31-c160-4aa6-a84f-36a6dfdddfaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample4, 'Normal');\nconst expected = [\n  { name: 'Tauros', num: '128' },\n  { name: 'Ditto', num: '132' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "730739f7-dd18-4779-95bc-394cc0d3aaa0",
              "parentUUID": "9dabfc31-c160-4aa6-a84f-36a6dfdddfaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "findByType(pokeData, type) : returns the name and number of all pokemon with this type data sample 5, Dragon",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByType(dataSample5, 'Dragon');\nconst expected = [\n  { name: 'Dratini', num: '147' },\n  { name: 'Dragonair', num: '148' },\n  { name: 'Dragonite', num: '149' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "e969af99-28bd-41fd-ad3d-852795ab32eb",
              "parentUUID": "9dabfc31-c160-4aa6-a84f-36a6dfdddfaa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "269c4150-072a-4fc5-9e4e-d94450adfe07",
            "f3dae8ae-11fc-48fe-ba98-73652ec2f62c",
            "33d3e2de-b8a3-4094-9d69-18d30f9debce",
            "730739f7-dd18-4779-95bc-394cc0d3aaa0",
            "e969af99-28bd-41fd-ad3d-852795ab32eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "83183f77-c09d-4c9b-aa0f-b74d51a094f1",
          "title": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key",
          "fullFile": "e:\\HYF\\06-WebApps\\week-4\\Exercises\\pokedex-api\\logic\\find-by\\value\\spec.js",
          "file": "\\logic\\find-by\\value\\spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, 12",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 1, 12",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample1, '12');\nconst expected = [\n  { name: 'Caterpie', num: '010' },\n  { name: 'Butterfree', num: '012' },\n  { name: 'Weedle', num: '013' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "c18ff020-ef10-4f69-8b33-1bf496169a5c",
              "parentUUID": "83183f77-c09d-4c9b-aa0f-b74d51a094f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 2, Bug",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample2, 'Bug');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "b8311ae9-599f-45aa-aa85-27b942936659",
              "parentUUID": "83183f77-c09d-4c9b-aa0f-b74d51a094f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, None",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 4, None",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample4, 'None');\nconst expected = [\n  { name: 'Mr. Mime', num: '122' },\n  { name: 'Scyther', num: '123' },\n  { name: 'Jynx', num: '124' },\n  { name: 'Electabuzz', num: '125' },\n  { name: 'Magmar', num: '126' },\n  { name: 'Pinsir', num: '127' },\n  { name: 'Tauros', num: '128' },\n  { name: 'Lapras', num: '131' },\n  { name: 'Ditto', num: '132' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "be618932-932b-4ef8-ae85-6eccb806d072",
              "parentUUID": "83183f77-c09d-4c9b-aa0f-b74d51a094f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, null",
              "fullTitle": "findByValue(pokeData, value) : returns the name and number of all pokemon with this value in any key data sample 5, null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByValue(dataSample5, \"null\");\nconst expected = [\n  { name: 'Moltres', num: '146' },\n  { name: 'Dragonite', num: '149' },\n  { name: 'Mewtwo', num: '150' },\n  { name: 'Mew', num: '151' }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "9fafe85a-9094-43b2-9b1b-b18a92b9bdc2",
              "parentUUID": "83183f77-c09d-4c9b-aa0f-b74d51a094f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c18ff020-ef10-4f69-8b33-1bf496169a5c",
            "b8311ae9-599f-45aa-aa85-27b942936659",
            "be618932-932b-4ef8-ae85-6eccb806d072",
            "9fafe85a-9094-43b2-9b1b-b18a92b9bdc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "714dd82c-6bf9-4d01-974d-e5fffe119272",
          "title": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness",
          "fullFile": "e:\\HYF\\06-WebApps\\week-4\\Exercises\\pokedex-api\\logic\\find-by\\weakness\\spec.js",
          "file": "\\logic\\find-by\\weakness\\spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 1, Electric",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 1, Electric",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample1, 'Electric');\nconst expected = [\n  {\n    name: 'Squirtle',\n    num: '007'\n  },\n  {\n    name: 'Wartortle',\n    num: '008'\n  },\n  {\n    name: 'Blastoise',\n    num: '009'\n  },\n  {\n    name: 'Butterfree',\n    num: '012'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "d52aceb5-781b-4048-983b-629d777810a0",
              "parentUUID": "714dd82c-6bf9-4d01-974d-e5fffe119272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Bug",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 2, Bug",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample2, 'Bug');\nconst expected = [\n  {\n    name: 'Paras',\n    num: '046'\n  },\n  {\n    name: 'Parasect',\n    num: '047'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "2d8cdb07-5951-48a9-83e5-da8bc9da28a9",
              "parentUUID": "714dd82c-6bf9-4d01-974d-e5fffe119272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, Fighting",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 3, Fighting",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample3, 'Fighting');\nconst expected = [\n  {\n    name: 'Dewgong',\n    num: '087'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "6ecdb8cd-4313-4c31-8bf7-96598c7faf19",
              "parentUUID": "714dd82c-6bf9-4d01-974d-e5fffe119272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample4, 'Normal');\nconst expected = null;\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "08e7de63-486d-41de-ae90-4ab3e84e47bc",
              "parentUUID": "714dd82c-6bf9-4d01-974d-e5fffe119272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "findByWeakness(pokeData, weakness) : returns the name and number of all pokemon with this weakness data sample 5, Dragon",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = findByWeakness(dataSample5, 'Dragon');\nconst expected = [\n  {\n    name: 'Dratini',\n    num: '147'\n  },\n  {\n    name: 'Dragonair',\n    num: '148'\n  },\n  {\n    name: 'Dragonite',\n    num: '149'\n  }\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "83f1783d-c99c-4149-94a4-5c8412c1f4f5",
              "parentUUID": "714dd82c-6bf9-4d01-974d-e5fffe119272",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d52aceb5-781b-4048-983b-629d777810a0",
            "2d8cdb07-5951-48a9-83e5-da8bc9da28a9",
            "6ecdb8cd-4313-4c31-8bf7-96598c7faf19",
            "08e7de63-486d-41de-ae90-4ab3e84e47bc",
            "83f1783d-c99c-4149-94a4-5c8412c1f4f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ecd31e2e-8415-4330-bfd5-4dc8b1042e49",
          "title": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData",
          "fullFile": "e:\\HYF\\06-WebApps\\week-4\\Exercises\\pokedex-api\\logic\\type-stats\\spec.js",
          "file": "\\logic\\type-stats\\spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 2, Grass",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 2, Grass",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample2, 'Grass');\nconst expected = {\n  typeCount: 5,\n  typeName: 'Grass',\n  weaknessCount: 0\n};\nconsole.log('answer is ' + expected);\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "7b4b163e-ad7d-4013-ae6a-5cc12ee7d33b",
              "parentUUID": "ecd31e2e-8415-4330-bfd5-4dc8b1042e49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, Fire",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 2, Fire",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample2, 'Fire');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fire',\n  weaknessCount: 5\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "e7b2d066-fa4c-4804-ad41-2d03e46a77ea",
              "parentUUID": "ecd31e2e-8415-4330-bfd5-4dc8b1042e49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Normal",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 4, Normal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample4, 'Normal');\nconst expected = {\n  typeCount: 2,\n  typeName: 'Normal',\n  weaknessCount: 0\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "6c20bc03-fd5a-4a0b-acd0-273f46f79894",
              "parentUUID": "ecd31e2e-8415-4330-bfd5-4dc8b1042e49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, Fighting",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 4, Fighting",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample4, 'Fighting');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fighting',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "f53faea1-e7a4-49ae-9886-ef4c77675442",
              "parentUUID": "ecd31e2e-8415-4330-bfd5-4dc8b1042e49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Dragon",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 5, Dragon",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample5, 'Dragon');\nconst expected = {\n  typeCount: 3,\n  typeName: 'Dragon',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "7756f0a0-aa12-460f-b22c-d6b1d4791eff",
              "parentUUID": "ecd31e2e-8415-4330-bfd5-4dc8b1042e49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, Fairy",
              "fullTitle": "typeStats(pokeData, type) : returns how many times a type appears in the pokeData data sample 5, Fairy",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = typeStats(dataSample5, 'Fairy');\nconst expected = {\n  typeCount: 0,\n  typeName: 'Fairy',\n  weaknessCount: 3\n};\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "06d643c0-c68e-4c8e-8c67-2749bb399980",
              "parentUUID": "ecd31e2e-8415-4330-bfd5-4dc8b1042e49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b4b163e-ad7d-4013-ae6a-5cc12ee7d33b",
            "e7b2d066-fa4c-4804-ad41-2d03e46a77ea",
            "6c20bc03-fd5a-4a0b-acd0-273f46f79894",
            "f53faea1-e7a4-49ae-9886-ef4c77675442",
            "7756f0a0-aa12-460f-b22c-d6b1d4791eff",
            "06d643c0-c68e-4c8e-8c67-2749bb399980"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eb51d586-c15e-46a6-88c1-a966b2774381",
          "title": "valuesForKey(pokeData, key) : returns all unique values stored in that key",
          "fullFile": "e:\\HYF\\06-WebApps\\week-4\\Exercises\\pokedex-api\\logic\\values-for-key\\spec.js",
          "file": "\\logic\\values-for-key\\spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "data sample 2, id",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 2, id",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample2, 'id');\nconst expected = [43, 44, 45, 46, 47];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "e97da56b-eca0-497e-83a7-b3f02aec1ee2",
              "parentUUID": "eb51d586-c15e-46a6-88c1-a966b2774381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 2, name",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 2, name",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample2, 'name');\nconst expected = [\n  'Oddish',\n  'Gloom',\n  'Vileplume',\n  'Paras',\n  'Parasect'\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "dc8c6741-be04-4118-8951-8259460e8d62",
              "parentUUID": "eb51d586-c15e-46a6-88c1-a966b2774381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, num",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 3, num",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample3, 'num');\nconst expected = ['083', '084', '085', '086', '087'];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "9829d2fa-e07b-4cf5-9dd7-9ef12027f0f7",
              "parentUUID": "eb51d586-c15e-46a6-88c1-a966b2774381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 3, multipliers",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 3, multipliers",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample3, 'multipliers');\nconst expected = [\n  null,\n  [2.19, 2.24],\n  [1.04, 1.96]\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "483be198-6176-411b-8c97-e4b9fd92d6d4",
              "parentUUID": "eb51d586-c15e-46a6-88c1-a966b2774381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, weaknesses",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 4, weaknesses",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample4, 'weaknesses');\nconst expected = [\n  ['Bug', 'Ghost', 'Dark'],\n  ['Fire', 'Electric', 'Ice', 'Flying', 'Rock'],\n  ['Fire', 'Bug', 'Rock', 'Ghost', 'Dark', 'Steel'],\n  ['Ground'],\n  ['Water', 'Ground', 'Rock'],\n  ['Fire', 'Flying', 'Rock'],\n  ['Fighting'],\n  ['Electric', 'Grass'],\n  ['Electric', 'Rock'],\n  ['Electric', 'Grass', 'Fighting', 'Rock']\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "b5332efe-e68f-4b49-93ee-0dcd194ac148",
              "parentUUID": "eb51d586-c15e-46a6-88c1-a966b2774381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 4, prev_evolution",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 4, prev_evolution",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample4, 'prev_evolution');\nconst expected = [\n  [\n    { num: '129', name: 'Magikarp' }\n  ]\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "fc96d4b5-0d97-4b10-814a-356dd8292dee",
              "parentUUID": "eb51d586-c15e-46a6-88c1-a966b2774381",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "data sample 5, next_evolution",
              "fullTitle": "valuesForKey(pokeData, key) : returns all unique values stored in that key data sample 5, next_evolution",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const actual = valuesForKey(dataSample5, 'next_evolution');\nconst expected = [\n  [\n    { num: '148', name: 'Dragonair' },\n    { num: '149', name: 'Dragonite' }\n  ],\n  [\n    { num: '149', name: 'Dragonite' }\n  ]\n];\nassert.deepStrictEqual(actual, expected);",
              "err": {},
              "uuid": "de90b485-caf0-4631-a4d4-b8b976f4cd29",
              "parentUUID": "eb51d586-c15e-46a6-88c1-a966b2774381",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e97da56b-eca0-497e-83a7-b3f02aec1ee2",
            "dc8c6741-be04-4118-8951-8259460e8d62",
            "9829d2fa-e07b-4cf5-9dd7-9ef12027f0f7",
            "483be198-6176-411b-8c97-e4b9fd92d6d4",
            "b5332efe-e68f-4b49-93ee-0dcd194ac148",
            "fc96d4b5-0d97-4b10-814a-356dd8292dee",
            "de90b485-caf0-4631-a4d4-b8b976f4cd29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}